// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("PRISMA_DATABASE_CONNECTION_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique @db.VarChar(320)
  password String
  lc_username String @unique @db.VarChar(240) @default("")
  inboxSender    Inbox[] @relation("sender")
  inboxrecipient Inbox[] @relation("recipient")
  // New: to define the relation to the group
  groups      Group[] // A user can belong to many groups
}


model Group {
 id            Int     @id @default(autoincrement())
 uniqueGroupId String  @unique @default(cuid())
 groupName     String
 numberOfUsers Int     @default(0) // default to 0 for new groups
 isActive      Boolean @default(true) // default to true for new groups
 users         User[] // A group can have many users
}


model Inbox {
  id            Int     @id @default(autoincrement())   
  sender        User    @relation("sender", fields: [senderId], references: [id])
  senderId      Int 
  recipient     User    @relation("recipient", fields: [recipientId], references: [id])
  recipientId   Int
  context       String
  isInvitation  Boolean
  acknowledgement Acknowledgement @default(RECEIVED)
}

enum Acknowledgement {
  ACCEPT
  DENY
  VIEWED
  RECEIVED
}